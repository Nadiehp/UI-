local player = game.Players.LocalPlayer
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0.2, 0, 0.3, 0)
frame.Position = UDim2.new(0.35, 0, 0.4, 0)
frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
frame.Active = true
frame.Draggable = true
frame.Parent = screenGui

local frameCorner = Instance.new("UICorner")
frameCorner.CornerRadius = UDim.new(0.1, 0)
frameCorner.Parent = frame

game:GetService("StarterGui"):SetCore("SendNotification", { 
    Title = "Executed"; 
    Text = "By NbHp"; 
    Icon = ""; 
    Duration = 4
})

local button = Instance.new("TextButton")
button.Size = UDim2.new(0.8, 0, 0.3, 0)
button.Position = UDim2.new(0.1, 0, 0.15, 0)
button.Text = "Collect all"
button.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
button.TextColor3 = Color3.fromRGB(255, 255, 255)
button.Parent = frame

local buttonCorner = Instance.new("UICorner")
buttonCorner.CornerRadius = UDim.new(0.2, 0)
buttonCorner.Parent = button

button.MouseButton1Click:Connect(function()
    local targetCFrame = CFrame.new(
        53.9190788, -196.128088, -224.225708, 
        -0.837744415, 0.202916488, -0.50696075, 
        2.08965189e-11, 0.928393185, 0.371599346, 
        0.546062529, 0.311305285, -0.777756214
    )

    local droppedFolder = game.Workspace:FindFirstChild("Dropped")

    local function getAllCFrameObjects(model)
        local objects = {}
        for _, descendant in ipairs(model:GetDescendants()) do
            if descendant:IsA("BasePart") or descendant:IsA("Model") then
                if descendant:IsA("Model") and descendant.PrimaryPart then
                    table.insert(objects, descendant.PrimaryPart)
                elseif descendant:IsA("BasePart") then
                    table.insert(objects, descendant)
                end
            end
        end
        return objects
    end

    if droppedFolder then
        for _, item in ipairs(droppedFolder:GetChildren()) do
            local owner = item:FindFirstChild("Owner", true)
            local cframeObjects = getAllCFrameObjects(item)

            if #cframeObjects > 0 and owner and owner:IsA("ObjectValue") and owner.Value == player then
                for _, obj in ipairs(cframeObjects) do
                    obj.CFrame = targetCFrame
                    obj.CanCollide = false
                end
            end
        end
    end
end)


local button2 = Instance.new("TextButton")
button2.Size = UDim2.new(0.8, 0, 0.3, 0)
button2.Position = UDim2.new(0.1, 0, 0.52, 0)
button2.Text = "Fake Jump: OFF"
button2.BackgroundColor3 = Color3.fromRGB(100, 50, 50)
button2.TextColor3 = Color3.fromRGB(255, 255, 255)
button2.Parent = frame

local button2Corner = Instance.new("UICorner")
button2Corner.CornerRadius = UDim.new(0.2, 0)
button2Corner.Parent = button2

local autoCollect = false
local autoCollectLoop

button2.MouseButton1Click:Connect(function()
    autoCollect = not autoCollect
    if autoCollect then
        button2.Text = "Fake Jump: ON"
        button2.BackgroundColor3 = Color3.fromRGB(50, 100, 50)
        
        autoCollectLoop = task.spawn(function()
            while autoCollect do

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local remoteEvents = ReplicatedStorage:WaitForChild("RemoteEvents")

for _, obj in ipairs(remoteEvents:GetChildren()) do
    if obj.Name == "Jumped" then
        obj.Name = "FJumped"
    end
end

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

humanoid:ChangeState(Enum.HumanoidStateType.Jumping)

if _G.jumpRequestConnection then
    _G.jumpRequestConnection:Disconnect()
end

_G.jumpRequestConnection = UserInputService.JumpRequest:Connect(function()
    for _, obj in ipairs(remoteEvents:GetChildren()) do
        if obj.Name == "FJumped" then
            obj.Name = "Jumped"
        end
    end
end)
                task.wait(1)
            end
        end)
    else
        button2.Text = "Fake Jump: OFF"
        button2.BackgroundColor3 = Color3.fromRGB(100, 50, 50)
        task.cancel(autoCollectLoop)
    end
end)
